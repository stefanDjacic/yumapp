@inject SignInManager<AppUser> _signInManager;
@{ 
    bool isUserSignedIn = _signInManager.IsSignedIn(User);
    AppUser currentUser = ViewBag.CurrentUser;
    bool isInAdminRole;
    if (currentUser != null)
    {
        isInAdminRole = await _signInManager.UserManager.IsInRoleAsync(currentUser, "admin");
    }
    else
    {
        isInAdminRole = false;
    }
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />    
    <title>@ViewData["Title"] - YumApp</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.1/css/all.min.css" />
    <link rel="stylesheet" href="~/css/site.css" />
</head>
<body>
    <header>
        <vc:navbar is-signed-in="isUserSignedIn" />
    </header>
    <div class="container mt-5 pt-5">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <vc:footer is-signed-in="isUserSignedIn" />

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @if (isUserSignedIn)
    {
        <script src="~/js/microsoft/signalr/dist/browser/signalr.js"></script>
        <script>
            //signalR connection
            var connection = new signalR.HubConnectionBuilder()
                .configureLogging(signalR.LogLevel.Debug)
                .withUrl('/User')
                .withAutomaticReconnect()
                .build();

            connection.start().then(function () {                
                if (@isInAdminRole.ToString().ToLower()) {
                    try {
                        connection.invoke('AddToGroup', 'admin');
                        console.log('Added to admin group!');
                    } catch (err) {
                        console.log(err.message);
                    }
                }
                console.log("SignalR connected!")
            }).catch(function (err) {
                console.log(err.toString())
            });
            //signalR conneciton
        </script>
        <script src="~/js/NotificationScript.js"></script>
    }
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
