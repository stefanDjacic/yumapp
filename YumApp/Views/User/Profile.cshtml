@model List<PostModel>
@{
    ViewData["Title"] = "Profile";

    AppUserModel userProfile = ViewBag.UserProfile;

    AppUser currentLoggedInUser = ViewBag.CurrentUser;
}

<div class="d-flex flex-column">
    <div class="user-profile-background bg-success mb-4 mt-3 rounded-circle w-100 d-flex">
        <img src="@userProfile.PhotoPath" alt="User photo" class="user-profile-photo img-fluid img-thumbnail" />
        <div class="user-profile-info ml-5 align-self-center font-weight-light d-flex justify-content-between w-100 align-items-center">
            <div>
                <p class="mb-2 text-white">
                    Name: @userProfile.FirstName @userProfile.LastName
                </p>
                <p class="mb-2 text-white">
                    DOB: @userProfile.DateOfBirth.ToShortDateString()
                </p>
                <p class="mb-2 text-white">
                    Email: @userProfile.Email
                </p>
                <p class="mb-2 text-white">
                    Gender: @userProfile.Gender
                </p>
                @if (!string.IsNullOrWhiteSpace(userProfile.Country))
                {
                    <p class="mb-0 text-white">
                        From: @userProfile.Country
                    </p>
                }
            </div>

            @if (currentLoggedInUser.Id != userProfile.Id)
            {
                @if (userProfile.IsBeingFollowed)
                {
                    <div class="mr-5 p-5">
                        <button id="followButton" class="btn btn-danger">Unfollow</button>
                    </div>
                }
                else
                {
                    <div class="mr-5 p-5">
                        <button id="followButton" class="btn btn-primary">Follow</button>
                    </div>
                }
            }
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(userProfile.About))
    {
        <div class="user-profile-about pl-5 pr-5 align-self-center font-weight-light">
            <p class="mr-5 text-break">
                @userProfile.About
            </p>
        </div>
    }

    <div class="d-flex row mt-3">
        <div class="friends-and-yums col-3">
            <div class="list-group">
                <button id="following-btn" type="button" class="list-group-item list-group-item-action">
                    <i class="fas fa-user"></i>
                    Following
                </button>
                <button id="followers-btn" type="button" class="list-group-item list-group-item-action">
                    <i class="fas fa-users"></i>
                    Followers
                </button>
                <button id="yummed-posts-btn" type="button" class="list-group-item list-group-item-action">
                    <i class="fas fa-thumbs-up"></i>
                    Liked posts
                </button>                
            </div>
        </div>

        <div class="verical-line h-auto ml-3 mr-3 bg-secondary">

        </div>

        <div class="userposts col-8">
            @if (currentLoggedInUser.Id == userProfile.Id)
            {
                <partial name="_AddNewPostPartial" />
            }
            <div id="hide-and-seek">
                <partial name="_UserPostsPartial" />
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="~/js/microsoft/signalr/dist/browser/signalr.js"></script>
    <script src="~/js/SignalR.js"></script>
    <script src="~/js/PostRelatedScript.js"></script>
    <script src="~/js/NewPostScripts.js"></script>
    <script>
        //Start of ajax call for getting liked posts of specified user
        $(document).ready(function () {
            $('#yummed-posts-btn').click(function () {
                $.ajax({
                    type: 'GET',
                    url: '/User/GetYummedPosts/@userProfile.Id',
                    success: function (yummedPosts) {
                        $('#all-user-posts').hide();
                        $('#add-new-post-btn').hide();

                        if ($('#follow-div').length) {
                            $('#follow-div').remove();
                        }

                        var hideAndSeekDiv = document.getElementById('hide-and-seek');
                        var followDiv = document.createElement('div');
                        followDiv.setAttribute('id', 'follow-div');
                        followDiv.classList.add('d-flex', 'flex-wrap', 'flex-column');

                        var backButton = `
                            <div class="following-div-btn">
                                <button class="btn bg-transparent" onclick="GoBack()">
                                    <i class="fas fa-chevron-left mr-3"></i>Back
                                </button>
                            </div>
                        `;
                        followDiv.innerHTML += backButton;

                        var allUserPosts = document.getElementById('all-user-posts');

                        yummedPosts.forEach((post) => {
                            var mainDiv = document.createElement('div');
                            mainDiv.classList.add('d-flex');
                            followDiv.appendChild(mainDiv);//

                            var yumCounterDiv = document.createElement('div');
                            yumCounterDiv.classList.add('number-of-yums', 'pt-1', 'd-flex', 'flex-column', 'align-items-center', 'rounded-circle', 'bg-success');
                            yumCounterDiv.innerHTML = `
                                <p id="yum-counter-${post.id}" class="mb-0 text-white">${post.numberOfYums}</p>
                                <p class="text-white">Yums</p>
                            `;
                            mainDiv.appendChild(yumCounterDiv);

                            var bigDiv = document.createElement('div');
                            bigDiv.classList.add('post', 'd-inline-flex', 'flex-column', 'w-100', 'ml-4', 'mb-3', 'p-4');
                            mainDiv.appendChild(bigDiv);

                            var postInfoDiv = document.createElement('div');
                            postInfoDiv.classList.add('user-time-options', 'row', 'd-flex', 'justify-content-between', 'mb-3');
                            postInfoDiv.innerHTML = `
                                <div class="media">
                                    <div class="d-flex flex-column flex-sm-row">
                                        <a href="/User/Profile/${post.user.id}" @*asp-action="Profile" asp-controller="User" asp-route-id="${post.user.id}"*@>
                                            <img src="${post.user.photoPath}" class="post-profile-photo img-fluid rounded-circle" alt="User photo">
                                        </a>
                                        <div class="media-body d-flex flex-column justify-content-between ml-2">
                                            <a href="/User/Profile/${post.user.id}" @*asp-action="Profile" asp-controller="User" asp-route-id="${post.user.id}"*@>
                                                <p class="post-username text-nowrap mb-0 font-weight-bold">
                                                    ${post.user.firstName} ${post.user.lastName}
                                                </p>
                                            </a>
                                            <p class="post-time text-nowrap mb-0">
                                                ${post.timeOfPosting}
                                            </p>
                                        </div>
                                    </div>
                                </div>

                                <div>
                                    <div class="dropdown mr-3">
                                        <button class="btn bg-transparent dropdown" type="button" id="dropdownMenu2" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="fas fa-ellipsis-v"></i>
                                        </button>
                                        <div class="dropdown-menu" aria-labelledby="dropdownMenu2">
                                            <button class="dropdown-item" type="button">Report</button>
                                        </div>
                                    </div>
                                </div>
                            `;
                            bigDiv.appendChild(postInfoDiv);

                            if (post.ingredients.length) {
                                var allIngredientsDiv = document.createElement('div');
                                allIngredientsDiv.classList.add('ingredients', 'mb-3');
                                allIngredientsDiv.innerHTML = `
                                     <p class="mb-2">
                                        Necessary ingredients:
                                    </p>
                                `;

                                post.ingredients.forEach((ingredient) => {
                                    var ingredientDiv = document.createElement('div');
                                    ingredientDiv.classList.add('mb-2');

                                    var ingredientHtml = `
                                        <button type="button" class="ingredient-btn btn btn-outline-success d-flex rounded-pill p-0 align-items-center" data-toggle="modal" data-target="#ModalCenter-ingredient1">
                                            <img class="ingredient-photo rounded-pill" src="${ingredient.photoPath}"@*~/Photos/DefaultIngredientPhoto.jpg*@ alt="${ingredient.name}" />
                                            <p class="mb-0 ml-3 mr-3">
                                                ${ingredient.name}
                                            </p>
                                        </button>

                                        <div class="modal fade" id="ModalCenter-ingredient1" tabindex="-1" role="dialog" aria-labelledby="ModalCenterTitle" aria-hidden="true">
                                            <div class="modal-dialog modal-dialog-centered" role="document">
                                                <div class="modal-content">
                                                    <div class="modal-header">
                                                        <h5 class="modal-title" id="ModalCenterTitle-ingredient">${ingredient.name}</h5>
                                                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                            <span aria-hidden="true">&times;</span>
                                                        </button>
                                                    </div>
                                                    <div class="modal-body d-flex">
                                                        <div>
                                                            <img class="modal-body-photo rounded" src="${ingredient.photoPath}" alt="${ingredient.name} photo" />
                                                        </div>

                                                        <div class="verical-line h-auto bg-secondary ml-3 mr-3">

                                                        </div>

                                                        <div class="modal-body-info">
                                                            ${ingredient.description}
                                                        </div>
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    `;

                                    ingredientDiv.innerHTML = ingredientHtml;
                                    allIngredientsDiv.appendChild(ingredientDiv)
                                });

                                bigDiv.appendChild(allIngredientsDiv);
                            }

                            var contentDiv = document.createElement('div');
                            contentDiv.classList.add('content');
                            contentDiv.innerHTML = `
                                <p class="mb-0">
                                    ${post.content}
                                </p>
                            `;
                            bigDiv.appendChild(contentDiv);

                            if (post.notes) {
                                var notesDiv = document.createElement('div');
                                notesDiv.classList.add('notes', 'mt-4');
                                notesDiv.innerHTML = `
                                     <p>
                                        NOTES: ${post.notes}
                                    </p>
                                `;
                                bigDiv.appendChild(notesDiv);    
                            }

                        });
                        hideAndSeekDiv.appendChild(followDiv);
                        $('#follow-div').show();
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            });
        });
        //End of ajax call for getting liked posts of specified user

        //Start of ajax call for getting followers of specified user
        $(document).ready(function () {
            $('#followers-btn').click(function () {
                $.ajax({
                    type: 'GET',
                    url: '/User/GetFollowers/@userProfile.Id',
                    success: function (users) {
                        $('#all-user-posts').hide();
                        $('#add-new-post-btn').hide();

                        if ($('#follow-div').length) {
                            $('#follow-div').remove();
                        }

                        var hideAndSeekDiv = document.getElementById('hide-and-seek');
                        var followDiv = document.createElement('div');
                        followDiv.setAttribute('id', 'follow-div');
                        followDiv.classList.add('d-flex', 'flex-wrap');

                        var backButton = `
                            <div class="following-div-btn">
                                <button class="btn bg-transparent" onclick="GoBack()">
                                    <i class="fas fa-chevron-left mr-3"></i>Back
                                </button>
                            </div>
                        `;
                        followDiv.innerHTML += backButton;

                        users.forEach((user) => {
                            var usersHtml = `
                                <div class="ml-3 mt-2 mr-3 bg-dark">
                                    <figure class="figure">
                                        <a href="/User/Profile/${user.id}">
                                            <img src="${user.photoPath}" class="figure-img img-fluid rounded-circle follow-photo" alt="User photo" >
                                            <figcaption class="figure-caption text-center">
                                                ${user.firstName} ${user.lastName}
                                            </figcaption>
                                        </a>
                                    </figure>
                                </div>
                            `;

                            followDiv.innerHTML += usersHtml;
                        });
                        hideAndSeekDiv.appendChild(followDiv);
                        $('#follow-div').show();
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            });
        });
        //End of ajax call for getting followers of specified user


        //Start of ajax call for getting users that are followed by specified user
        $(document).ready(function () {
            $('#following-btn').click(function () {
                $.ajax({
                    type: 'GET',
                    url: '/User/GetFollowingUsers/@userProfile.Id',
                    success: function (users) {
                        $('#all-user-posts').hide();
                        $('#add-new-post-btn').hide();

                        if ($('#follow-div').length) {
                            $('#follow-div').remove();
                        }

                        var hideAndSeekDiv = document.getElementById('hide-and-seek');
                        var followDiv = document.createElement('div');
                        followDiv.setAttribute('id', 'follow-div');
                        followDiv.classList.add('d-flex','flex-wrap');

                        var backButton = `
                            <div class="following-div-btn">
                                <button class="btn bg-transparent" onclick="GoBack()">
                                    <i class="fas fa-chevron-left mr-3"></i>Back
                                </button>
                            </div>
                        `;
                        followDiv.innerHTML += backButton;

                        users.forEach((user) => {
                            var usersHtml = `
                                <div class="ml-3 mt-2 mr-3 bg-dark">
                                    <figure class="figure">
                                        <a href="/User/Profile/${user.id}">
                                            <img src="${user.photoPath}" class="figure-img img-fluid rounded-circle follow-photo" alt="User photo" >
                                            <figcaption class="figure-caption text-center">
                                                ${user.firstName} ${user.lastName}
                                            </figcaption>
                                        </a>
                                    </figure>
                                </div>
                            `;

                            followDiv.innerHTML += usersHtml;
                        });
                        hideAndSeekDiv.appendChild(followDiv);
                        $('#follow-div').show();
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            });
        });
        ////End of ajax call for getting users that are followed by specified user

        //Shows user posts and hides users
        function GoBack() {
            $('#all-user-posts').show();
            $('#add-new-post-btn').show();
            $('#follow-div').remove();
        }
        //

        //Start of ajax call for following
        var doesFollow = '@userProfile.IsBeingFollowed.ToString()'.toLowerCase();
        $(document).ready(function () {
            $('#followButton').click(function () {
                if (doesFollow) {
                    $.ajax({
                    type : 'POST',
                    url : '/User/UnfollowUser/@userProfile.Id.ToString()',
                    success: function () {
                        $('#followButton').removeClass('btn-danger').addClass('btn-primary').text('Follow');
                        doesFollow = !doesFollow;
                    },
                    error: function (response) {
                        alert(response.responseText);
                        }
                })
                } else {
                    $.ajax({
                        type: 'POST',
                        url: '/User/FollowUser/@userProfile.Id.ToString()',
                        success: function () {
                            $('#followButton').removeClass('btn-primary').addClass('btn-danger').text('Unfollow');
                            doesFollow = !doesFollow;

                            connection.invoke('AddNewNotificationsBE', @userProfile.Id.ToString()).catch(function (err) {
                                return console.log(err.toString());
                            });
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    })
                }
            });
        });

                ////signalR connection
        //var connection = new signalR.HubConnectionBuilder()
        //    .configureLogging(signalR.LogLevel.Debug)
        //    .withUrl('/User')
        //    .withAutomaticReconnect()
        //    .build();

        //connection.start().then(function () {
        //    console.log("SignalR connected!")
        //}).catch(function (err) {
        //    console.log(err.toString())
        //});
        ////signalR conneciton

        ////Start of method called by server for notifications
        //connection.on('AddNewNotificationsFE', function (userId) {
        //    $.ajax({
        //        type : 'GET',
        //        url : `/User/GetNotifications/${userId}`,
        //        success: function (notifications) {

        //            console.log(notifications);

        //            var ddm = document.getElementById('dropdown-menu');
        //            ddm.innerHTML = '';

        //            notifications.forEach((element) => {
        //                var div = document.createElement('div');
        //                div.classList.add('dropdown-item', 'dropdown-item-notification', 'p-2');

        //                if (element.notificationText.includes('followed')) {
        //                    var html = `
        //                        <a class="notification-link" href="/User/Profile/${element.idForRedirecting}">
        //                            <figure class="d-flex mb-1">
        //                                <img src="${element.initiatorPhotoPath}" alt="User photo" class="dropdown-item-notification-photo rounded-circle">
        //                                <figcaption class="ml-3">
        //            userProfile                   ${element.notificationText}
        //                                </figcaption>
        //                            </figure>
        //                            <p class="small mb-0">
        //                            ${element.timeOfNotification}
        //                            </p>
        //                        </a>
        //                    `;
        //                } else {
        //                    var html = `
        //                        <a class="notification-link" href="/User/SinglePost/${element.idForRedirecting}">
        //                            <figure class="d-flex mb-1">
        //                                <img src="${element.initiatorPhotoPath}" alt="User photo" class="dropdown-item-notification-photo rounded-circle">
        //                                <figcaption class="ml-3">
        //                                ${element.notificationText}
        //                                </figcaption>
        //                            </figure>
        //                            <p class="small mb-0">
        //                            ${element.timeOfNotification}
        //                            </p>
        //                        </a>
        //                    `;
        //                }
        //                console.log(html);
        //                div.innerHTML += html;

        //                ddm.appendChild(div);
        //                $('#notification-alarm').text(' ').removeClass('bg-transparent').addClass('bg-danger');
        //            });
        //        },
        //        error: function (response) {
        //            alert(response.responseText);
        //        }
        //    })
        //});
        ////End of method called by server for notifications

        ////Start of adding comment to the post
        //var commentHtml
        //connection.on('AddCommentToPostFE', function (commentModel) {
        //    console.log(commentModel);

        //    var allCommentsDiv = document.getElementById(`all-comments-${commentModel.postId}`);
        //    var divForComment = document.createElement('div');
        //    divForComment.classList.add('d-flex', 'mb-3');

        //    commentHtml = `
        //        <div>
        //            <a href="/User/Profile/${commentModel.commentator.id}">
        //                <img src="${commentModel.commentator.photoPath}" class="comment-user-photo" alt="User photo" />
        //            </a>
        //        </div>
        //        <div class="comment-user bg-light ml-2 p-2 d-flex align-items-center flex-coluserIdProfilemn">
        //            <a href="/User/Profile/${commentModel.commentator.id}" class="align-self-start">
        //                <p class="mb-1 font-weight-bold">
        //                    ${commentModel.commentator.firstName} ${commentModel.commentator.lastName}
        //                </p>
        //            </a>
        //            <p class="mb-0 align-self-start">
        //                ${commentModel.content}
        //            </p>
        //            </div>
        //        </div>
        //    `;

        //    divForComment.innerHTML += commentHtml;
        //    allCommentsDiv.appendChild(divForComment);
        //});
        ////End of adding comment to the post

        ////Start of ajax call for liking a post
        //var postIdForLike;
        //var userIdForLike;
        //    function YumAPost(btn) {
        //        postIdForLike = $(btn).attr('id');
        //        userIdForLike = $(btn).attr('data-userid');

        //        $.ajax({
        //            type: 'POST',
        //            url: `/User/YumAPost/${postIdForLike}`,
        //            success: function (response) {
        //                $(`#${postIdForLike}`).remove();
        //                $(`#yum-counter-${postIdForLike}`).text(response).addClass('text-white');
        //                $(`#yum-counter-${postIdForLike}`).parent().addClass('bg-success');

        //                connection.invoke('AddNewNotificationsBE', userIdForLike.toString()).catch(function (err) {
        //                    return console.log(err.toString());
        //                });
        //            },
        //            error: function (response) {
        //                alert(response.responseText);
        //            }
        //        });
        //    }
        ////End of ajax call for liking a post

        ////Start of ajax call for posting a new comment
        //var postIdForComment;
        //var textAreaValue;
        //function PostAComment(btn) {
        //    postIdForComment = $(btn).attr('data-postid');
        //    textAreaValue = $(`#textarea-comment-${postIdForComment}`).val();

        //    $.ajax({
        //        type: 'POST',
        //        url: `/User/PostAComment/${postIdForComment}`,
        //        contentType: 'application/x-www-form-urlencoded',
        //        data: { commentText: textAreaValue },
        //        /*data: JSON.stringify({ commentText : textAreaValue }),*/
        //        success: function (commentModel) {
        //            console.log(commentModel);

        //            connection.invoke('AddNewNotificationsBE', `${commentModel.appUserId.toString()}`).catch(function (err) {
        //                return console.log(err.toString());
        //            });

        //            connection.invoke('AddCommentToPostBE', commentModel).catch(function (err) {
        //                return console.log(err.toString());
        //            });

        //            $(`#textarea-comment-${postIdForComment}`).val('');
        //        },
        //        error: function (response) {
        //            alert(response.responseText);
        //        }
        //    });
        //}
        ////End of ajax call for posting a new comment

        //End of ajax call for following

        ////Start of ajax call for ingredients
        //$(document).ready(function () {
        //    $('#add-new-post-btn').click(function () {
        //        $.ajax({
        //            type: 'GET',
        //            url: '/User/GetIngredients',
        //            success: function (ingredients) {
        //                var ingredientDiv = document.getElementById('add-new-post-ingredients');
        //                ingredientDiv.innerHTML = '';

        //                ingredients.forEach((element) => {
        //                    var formCheckDiv = document.createElement('div');
        //                    formCheckDiv.classList.add('form-check');

        //                    var ingredientHtml = `
        //                        <input class="form-check-input" type="checkbox" value="${element.id}" id="ingredient-${element.id}">
        //                        <label class="form-check-label" for="ingredient-${element.id}">
        //                            ${element.name}
        //                        </label>
        //                    `;

        //                    formCheckDiv.innerHTML += ingredientHtml;

        //                    ingredientDiv.appendChild(formCheckDiv);
        //                });
        //            },
        //            error: function (response) {
        //                alert(response.responseText);
        //            }
        //        });
        //    });
        //});
        ////End of ajax call for ingredients

        ////Start of ajax call for posting new post
        //$(document).ready(function () {
        //    $('#post-new-post-btn').click(function () {
        //        var content = $('#add-new-post-textarea-content').val();
        //        console.log(content);
        //        var notes = $('#add-new-post-textarea-notes').val();
        //        console.log(notes);
        //        var ingredientIds = [];
        //        $('#add-new-post-ingredients input:checked').each(function () {
        //            ingredientIds.push($(this).attr('value'));
        //        });
        //        console.log(ingredientIds);

        //        $.ajax({
        //            type: 'POST',
        //            url: '/User/PostAPost',
        //            contentType: 'application/x-www-form-urlencoded',
        //            data: { postContent: content, postNotes: notes, postIngredientIds: ingredientIds },
        //            success: function (response) {
        //                window.location.href = response.redirectToUrl;
        //            },
        //            error: function (response) {
        //                alert(response.responseText);
        //            }
        //        });
        //    });
        //});
        ////End of ajax call for posting new post

        ////For removing indicator for new received notifications
        //$(document).ready(function () {
        //    $('#dropdownMenuLink').click(function () {
        //        $('#notification-alarm').text('').removeClass('bg-danger').addClass('bg-transparent');
        //    });
        //});
        ////End of new notifications indicator
    </script>
}
