@model List<PostModel>
@{
    ViewData["Title"] = "Profile";

    AppUserModel userProfile = ViewBag.UserProfile;

    AppUser currentLoggedInUser = ViewBag.CurrentUser;
}

<div class="d-flex flex-column">
    <div class="user-profile-background bg-success mb-4 mt-3 rounded-circle w-100 d-flex">
        <img src="@userProfile.PhotoPath" alt="User photo" class="user-profile-photo img-fluid img-thumbnail" />
        <div class="user-profile-info ml-5 align-self-center font-weight-light d-flex justify-content-between w-100 align-items-center">
            <div>
                <p class="mb-2 text-white">
                    Name: @userProfile.FirstName @userProfile.LastName
                </p>
                <p class="mb-2 text-white">
                    DOB: @userProfile.DateOfBirth.ToShortDateString()
                </p>
                <p class="mb-2 text-white">
                    Email: @userProfile.Email
                </p>
                <p class="mb-2 text-white">
                    Gender: @userProfile.Gender
                </p>
                @if (!string.IsNullOrWhiteSpace(userProfile.Country))
                {
                    <p class="mb-0 text-white">
                        From: @userProfile.Country
                    </p>
                }
            </div>

            @if (currentLoggedInUser.Id != userProfile.Id)
            {
                @if (userProfile.IsBeingFollowed)
                {
                    <div class="mr-5 p-5">
                        <button id="followButton" class="btn btn-danger">Unfollow</button>
                    </div>
                }
                else
                {
                    <div class="mr-5 p-5">
                        <button id="followButton" class="btn btn-primary">Follow</button>
                    </div>
                }
            }
        </div>
    </div>

    @if (!string.IsNullOrWhiteSpace(userProfile.About))
    {
        <div class="user-profile-about pl-5 pr-5 align-self-center font-weight-light">
            <p class="mr-5 text-break">
                @userProfile.About
            </p>
        </div>
    }

    <div class="d-flex row mt-3">
        <div class="friends-and-yums col-3">
            <div class="list-group">
                <button type="button" class="list-group-item list-group-item-action">
                    <i class="fas fa-user"></i>
                    Following
                </button>
                <button type="button" class="list-group-item list-group-item-action">
                    <i class="fas fa-users"></i>
                    Followers
                </button>
                <button type="button" class="list-group-item list-group-item-action">
                    <i class="fas fa-thumbs-up"></i>
                    Liked posts
                </button>
                MORAS DA NAPRAVIS RAZLICIT PRISTUP PROFILU U ZAVISNOSTI DA LI JE TRENUTNI KORISNIK PRISTUPIO SVOM PROFILU!!!!
            </div>
        </div>

        <div class="verical-line h-auto ml-3 mr-3 bg-secondary">

        </div>

        <div class="userposts col-8">
            <partial name="_UserPostsPartial" />
        </div>
    </div>
</div>
@section Scripts {
    <script src="~/js/microsoft/signalr/dist/browser/signalr.js"></script>
    <script>
        //signalR connection
        var connection = new signalR.HubConnectionBuilder()
            .configureLogging(signalR.LogLevel.Debug)
            .withUrl('/User')
            .withAutomaticReconnect()
            .build();

        connection.start().then(function () {
            console.log("SignalR connected!")
        }).catch(function (err) {
            console.log(err.toString())
        });
        //signalR conneciton

        //Start of method called by server
        connection.on('AddNewNotificationsFE', function (userId) {
            $.ajax({
                type : 'GET',
                url : `/User/GetNotifications/${userId}`,
                success: function (notifications) {

                    console.log(notifications);

                    var ddm = document.getElementById('dropdown-menu');
                    ddm.innerHTML = '';

                    notifications.forEach((element) => {
                        var div = document.createElement('div');
                        div.classList.add('dropdown-item', 'dropdown-item-notification', 'p-2');

                        if (element.notificationText.includes('followed')) {
                            var html = `
                                <a class="notification-link" href="/User/Profile/${element.idForRedirecting}">
                                    <figure class="d-flex mb-1">
                                        <img src="${element.initiatorPhotoPath}" alt="User photo" class="dropdown-item-notification-photo rounded-circle">
                                        <figcaption class="ml-3">
                                        ${element.notificationText}
                                        </figcaption>
                                    </figure>
                                    <p class="small mb-0">
                                    ${element.timeOfNotification}
                                    </p>
                                </a>
                            `;
                        } else {
                            var html = `
                                <a class="notification-link" href="/User/SinglePost/${element.idForRedirecting}">
                                    <figure class="d-flex mb-1">
                                        <img src="${element.initiatorPhotoPath}" alt="User photo" class="dropdown-item-notification-photo rounded-circle">
                                        <figcaption class="ml-3">
                                        ${element.notificationText}
                                        </figcaption>
                                    </figure>
                                    <p class="small mb-0">
                                    ${element.timeOfNotification}
                                    </p>
                                </a>
                            `;
                        }
                        console.log(html);
                        div.innerHTML += html;

                        ddm.appendChild(div);
                        $('#notification-alarm').text(' ').removeClass('bg-transparent').addClass('bg-danger');
                    });
                },
                error: function (response) {
                    alert(response.responseText);
                }
            })
        });
        //End of method called by server

        //Start of adding comment to the post
        var commentHtml
        connection.on('AddCommentToPostFE', function (commentModel) {
            console.log(commentModel);

            var allCommentsDiv = document.getElementById(`all-comments-${commentModel.postId}`);
            var divForComment = document.createElement('div');
            divForComment.classList.add('d-flex', 'mb-3');

            commentHtml = `
                <div>
                    <a href="/User/Profile/${commentModel.commentator.id}">
                        <img src="${commentModel.commentator.photoPath}" class="comment-user-photo" alt="User photo" />
                    </a>
                </div>
                <div class="comment-user bg-light ml-2 p-2 d-flex align-items-center flex-column">
                    <a href="/User/Profile/${commentModel.commentator.id}" class="align-self-start">
                        <p class="mb-1 font-weight-bold">
                            ${commentModel.commentator.firstName} ${commentModel.commentator.lastName}
                        </p>
                    </a>
                    <p class="mb-0 align-self-start">
                        ${commentModel.content}
                    </p>
                    </div>
                </div>
            `;

            divForComment.innerHTML += commentHtml;
            allCommentsDiv.appendChild(divForComment);
        });
        //End of adding comment to the post

        //Start of ajax call for liking a post
        var postIdForLike;
        var userIdForLike;
            function YumAPost(btn) {
                postIdForLike = $(btn).attr('id');
                userIdForLike = $(btn).attr('data-userid');

                $.ajax({
                    type: 'POST',
                    url: `/User/YumAPost/${postIdForLike}`,
                    success: function (response) {
                        $(`#${postIdForLike}`).remove();
                        $(`#yum-counter-${postIdForLike}`).text(response).addClass('text-white');
                        $(`#yum-counter-${postIdForLike}`).parent().addClass('bg-success');

                        connection.invoke('AddNewNotificationsBE', userIdForLike.toString()).catch(function (err) {
                            return console.log(err.toString());
                        });
                    },
                    error: function (response) {
                        alert(response.responseText);
                    }
                });
            }
        //End of ajax call for liking a post      

        //Start of ajax call for posting a new comment
        var postIdForComment;
        var textAreaValue;
        function PostAComment(btn) {
            postIdForComment = $(btn).attr('data-postid');
            textAreaValue = $(`#textarea-comment-${postIdForComment}`).val();

            $.ajax({
                type: 'POST',
                url: `/User/PostAComment/${postIdForComment}`,
                contentType: 'application/x-www-form-urlencoded',
                data: { commentText: textAreaValue },
                /*data: JSON.stringify({ commentText : textAreaValue }),*/
                success: function (commentModel) {
                    console.log(commentModel);

                    connection.invoke('AddNewNotificationsBE', `${commentModel.appUserId.toString()}`).catch(function (err) {
                        return console.log(err.toString());
                    });

                    connection.invoke('AddCommentToPostBE', commentModel).catch(function (err) {
                        return console.log(err.toString());
                    });

                    $(`#textarea-comment-${postIdForComment}`).val('');
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
        //End of ajax call for posting a new comment

        //Start of ajax call for following
        var doesFollow = '@userProfile.IsBeingFollowed.ToString()'.toLowerCase();
        $(document).ready(function () {
            $('#followButton').click(function () {
                if (doesFollow) {
                    $.ajax({
                    type : 'POST',
                    url : '/User/UnfollowUser/@userProfile.Id.ToString()',
                    success: function () {
                        $('#followButton').removeClass('btn-danger').addClass('btn-primary').text('Follow');
                        doesFollow = !doesFollow;
                    },
                    error: function (response) {
                        alert(response.responseText);
                        }
                })
                } else {
                    $.ajax({
                        type: 'POST',
                        url: '/User/FollowUser/@userProfile.Id.ToString()',
                        success: function () {
                            $('#followButton').removeClass('btn-primary').addClass('btn-danger').text('Unfollow');
                            doesFollow = !doesFollow;

                            connection.invoke('AddNewNotificationsBE', @userProfile.Id.ToString()).catch(function (err) {
                                return console.log(err.toString());
                            });
                        },
                        error: function (response) {
                            alert(response.responseText);
                        }
                    })
                }
            });
            });
        //End of ajax call for following

        //For removing indicator for new received notifications
        $(document).ready(function () {
            $('#dropdownMenuLink').click(function () {
                $('#notification-alarm').text('').removeClass('bg-danger').addClass('bg-transparent');
            });
        });
        //End of new notifications indicator
    </script>
}
